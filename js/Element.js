// Generated by CoffeeScript 1.3.3
var Element,
  __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

Element = (function() {

  function Element(el, camera) {
    this.el = el;
    this.translateZ = __bind(this.translateZ, this);

    this.translateY = __bind(this.translateY, this);

    this.translateX = __bind(this.translateX, this);

    this.rotateZ = __bind(this.rotateZ, this);

    this.rotateY = __bind(this.rotateY, this);

    this.rotateX = __bind(this.rotateX, this);

    this.update = __bind(this.update, this);

    this.needsUpdate = true;
    this.localPos = new Vector3D();
    this.globalPos = new Vector3D();
    this.rot = new Vector3D();
    this.vel = new Vector3D();
    this.angularVel = new Vector3D(.3, .2, .7);
    this.scale = new Vector3D(1, 1, 1);
    this.el.style['-webkit-perspective'] = camera.perspective;
    this.el.style['-webkit-perspective-origin'] = camera.perspectiveOrigin;
    this.el.style['-webkit-transform-style'] = camera.transformStyle;
    this.el.style['-webkit-backface-visibility'] = camera.backfaceVisibility;
  }

  Element.prototype.update = function() {
    this.localPos = this.localPos.add(this.vel);
    this.rot = this.rot.add(this.angularVel);
    this.el.style['-webkit-transform'] = "translate3d(" + this.localPos.x + ", " + this.localPos.y + ", " + this.localPos.z + ") rotateX(" + this.rot.x + "deg) rotateY(" + this.rot.y + "deg) rotateZ(" + this.rot.z + "deg)";
    if (this.angularVel.length() === 0 && this.vel.length() === 0) {
      return this.needsUpdate = false;
    }
  };

  Element.prototype.rotateX = function(deg) {
    this.rot.setX(deg);
    return this.needsUpdate = true;
  };

  Element.prototype.rotateY = function(deg) {
    this.rot.setY(deg);
    return this.needsUpdate = true;
  };

  Element.prototype.rotateZ = function(deg) {
    this.rot.setZ(deg);
    return this.needsUpdate = true;
  };

  Element.prototype.translateX = function(amt) {
    this.localPos.setX(amt);
    return this.needsUpdate = true;
  };

  Element.prototype.translateY = function(amt) {
    this.localPos.setY(amt);
    return this.needsUpdate = true;
  };

  Element.prototype.translateZ = function(amt) {
    this.localPos.setZ(amt);
    return this.needsUpdate = true;
  };

  return Element;

})();
